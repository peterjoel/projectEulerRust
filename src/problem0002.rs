/*
Project Euler 0002

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four
million, find the sum of the even-valued terms.
*/

use fib::{Fib};

pub fn run() -> u32 {

    let fib = Fib::new( 1, 2 );

    fib.filter( |x| { x % 2 == 0 })
        .take_while( |&x| { x <= 4000000 })
        .fold( 0, |sum, x| { sum + x })
}
